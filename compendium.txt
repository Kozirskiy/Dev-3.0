
I ended   __  35 and exercise repeat need __  lesson


_________________________________________________________

GIT'S commands:

cd - change directory - зміна папки на яку потрібно


--- Getting Started with GIT ---

git init - найперша команда для ініціалізації 'гіта'

git config --local user.name "Example" - вибираємо локально чи глобально налаштовуємо

git config --local user.email ex@i.ua - вказуємо ел пошту

git status - перевірка статусу файлів під наглядом гіта

git add -A - додавання повністю всіх файлів під нагляд гіта (git add main.css or git add *.css  - варіанти для додавання до гіта)

git commit -a -m"first commit dev 3.0" - додаємо перший комміт з описом що тут було зроблено

git remote add origin https://github.com/Kozirskiy/Dev-3.0.git - після створення репозит. на гітхабі вводимо ці дані

git branch -M main - потім це 

git push -u origin main - в кінці це,  і повинно зявитися в репоз наші дані

git push - каманда для відправки на репозиторій  github

___________Робота з репозиторієм віддалено________________________

cd .. - вихід з папки( дві крапки вказувати обовязково)

cd project - project назва папки де знаходиться проект 

git clone https://github.com/Kozirskiy/Dev-3.0.git project_2 - project_2 це назва новоствореної папки яка створиться під клонування з репозиторія

git pull - для оновлення даних з якими будемо працювати


ctrl+c --- press twice than you mast write ---  ":wq! + Enter"     --- це робити коли виникає помилка під час зєднання двох гілок на ропозит

________________________________________________________________________

Замикання функції  - це сама функція з усима їй доступними зовнішніми змінними

_________________________________________________________

Підрахунок елементів в обєкті
console.log(Object.keys(options).length);
_________________________________________________________

Must to know:
1) copy object.
2) methods for arrays.
3) cycles.
_________________________________________________________
Методи взаємодії з html:

div.classList.add('black');

// document.body.append(div);

wrapper.append(div);
// wrapper.appendChild(div);

// wrapper.insertBefore(div, hearts[1]);

// wrapper.prepend(div);

// hearts[1].before(div);
// hearts[1].after(div);

// circle[0].remove();

// wrapper.removeChild(hearts[1]);

// hearts[0].replaceWith(circle[0]);

// wrapper.replaceChild(circle[0], hearts[0]);

div.innerHTML =`<h1>developer</h1>`;

div.textContent = `developer`;

div.insertAdjacentHTML('beforeend', `<h2>web</h2>`);
______________________________________________________









_________________________________________________________










